# Database Mysql
jdbc1.datasource.username=
jdbc1.datasource.password=
jdbc1.datasource.jdbc-url=
jdbc1.datasource.driverClassName=com.mysql.jdbc.Driver

# Database Oracle
jdbc2.datasource.username=
jdbc2.datasource.password=
jdbc2.datasource.jdbc-url=
jdbc2.datasource.driverClassName=oracle.jdbc.driver.OracleDriver

#---------------数据库连接公共配置 begin-------------------
datasource.initialSize=5
datasource.minIdle=5
datasource.maxActive=20
datasource.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
datasource.timeBetweenEvictionRunsMillis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
datasource.minEvictableIdleTimeMillis=300000
datasource.validationQuery=SELECT 1 FROM DUAL
datasource.maxPoolPreparedStatementPerConnectionSize=20
#配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 :stat,wall,log4j
datasource.filters=stat
datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
#---------------数据库连接公共配置 end-------------------

#-----------log4j2配置---------------
logging.config=classpath:log4j2.xml

#-------------redis集群配置 begin---------------------
spring.redis.cluster.nodes=127.0.0.1:6380,127.0.0.1:6381,127.0.0.1:6382,127.0.0.1:6383,127.0.0.1:6384,127.0.0.1:6385
spring.redis.password=
spring.redis.cluster.timeout=6000
# 获取失败 最大重定向次数
spring.redis.cluster.max-redirects=3
#lettuce连接池
#连接池最大连接数（使用负值表示没有限制）
spring.redis.lettuce.pool.max-active=1000
# spring.redis.lettuce.pool.max-wait=-1 连接池最大阻塞等待时间（使用负值表示没有限制）
# 连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle=5
# 连接池中的最大空闲连接
spring.redis.lettuce.pool.max-idle=10
#-------------redis集群配置 end---------------------
mybatis.type-aliases-package=